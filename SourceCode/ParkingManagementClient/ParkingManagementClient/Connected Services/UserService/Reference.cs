//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParkingManagementClient.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary2lab4")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUsers", ReplyAction="http://tempuri.org/IUserService/getUsersResponse")]
        string[] getUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUsers", ReplyAction="http://tempuri.org/IUserService/getUsersResponse")]
        System.Threading.Tasks.Task<string[]> getUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/loginUser", ReplyAction="http://tempuri.org/IUserService/loginUserResponse")]
        ParkingManagementClient.UserService.User loginUser(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/loginUser", ReplyAction="http://tempuri.org/IUserService/loginUserResponse")]
        System.Threading.Tasks.Task<ParkingManagementClient.UserService.User> loginUserAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/registerUser", ReplyAction="http://tempuri.org/IUserService/registerUserResponse")]
        int registerUser(ParkingManagementClient.UserService.User User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/registerUser", ReplyAction="http://tempuri.org/IUserService/registerUserResponse")]
        System.Threading.Tasks.Task<int> registerUserAsync(ParkingManagementClient.UserService.User User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/deleteUser", ReplyAction="http://tempuri.org/IUserService/deleteUserResponse")]
        void deleteUser(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/deleteUser", ReplyAction="http://tempuri.org/IUserService/deleteUserResponse")]
        System.Threading.Tasks.Task deleteUserAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUser", ReplyAction="http://tempuri.org/IUserService/updateUserResponse")]
        void updateUser(ParkingManagementClient.UserService.User user, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUser", ReplyAction="http://tempuri.org/IUserService/updateUserResponse")]
        System.Threading.Tasks.Task updateUserAsync(ParkingManagementClient.UserService.User user, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/viewUser", ReplyAction="http://tempuri.org/IUserService/viewUserResponse")]
        ParkingManagementClient.UserService.User viewUser(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/viewUser", ReplyAction="http://tempuri.org/IUserService/viewUserResponse")]
        System.Threading.Tasks.Task<ParkingManagementClient.UserService.User> viewUserAsync(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/viewUser1", ReplyAction="http://tempuri.org/IUserService/viewUser1Response")]
        ParkingManagementClient.UserService.User viewUser1(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/viewUser1", ReplyAction="http://tempuri.org/IUserService/viewUser1Response")]
        System.Threading.Tasks.Task<ParkingManagementClient.UserService.User> viewUser1Async(string Email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : ParkingManagementClient.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<ParkingManagementClient.UserService.IUserService>, ParkingManagementClient.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] getUsers() {
            return base.Channel.getUsers();
        }
        
        public System.Threading.Tasks.Task<string[]> getUsersAsync() {
            return base.Channel.getUsersAsync();
        }
        
        public ParkingManagementClient.UserService.User loginUser(string Email, string Password) {
            return base.Channel.loginUser(Email, Password);
        }
        
        public System.Threading.Tasks.Task<ParkingManagementClient.UserService.User> loginUserAsync(string Email, string Password) {
            return base.Channel.loginUserAsync(Email, Password);
        }
        
        public int registerUser(ParkingManagementClient.UserService.User User) {
            return base.Channel.registerUser(User);
        }
        
        public System.Threading.Tasks.Task<int> registerUserAsync(ParkingManagementClient.UserService.User User) {
            return base.Channel.registerUserAsync(User);
        }
        
        public void deleteUser(string Email) {
            base.Channel.deleteUser(Email);
        }
        
        public System.Threading.Tasks.Task deleteUserAsync(string Email) {
            return base.Channel.deleteUserAsync(Email);
        }
        
        public void updateUser(ParkingManagementClient.UserService.User user, string Email) {
            base.Channel.updateUser(user, Email);
        }
        
        public System.Threading.Tasks.Task updateUserAsync(ParkingManagementClient.UserService.User user, string Email) {
            return base.Channel.updateUserAsync(user, Email);
        }
        
        public ParkingManagementClient.UserService.User viewUser(string UserId) {
            return base.Channel.viewUser(UserId);
        }
        
        public System.Threading.Tasks.Task<ParkingManagementClient.UserService.User> viewUserAsync(string UserId) {
            return base.Channel.viewUserAsync(UserId);
        }
        
        public ParkingManagementClient.UserService.User viewUser1(string Email) {
            return base.Channel.viewUser1(Email);
        }
        
        public System.Threading.Tasks.Task<ParkingManagementClient.UserService.User> viewUser1Async(string Email) {
            return base.Channel.viewUser1Async(Email);
        }
    }
}
